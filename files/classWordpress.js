// Generated by CoffeeScript 2.7.0
(function() {
  var WPAPI, Wordpress;

  WPAPI = require('./wpapi.js');

  Wordpress = class Wordpress {
    constructor(w = {}) {
      this.runName = this.runName.bind(this);
      this.twMakeTid = this.twMakeTid.bind(this);
      this.runFetchWpPosts = this.runFetchWpPosts.bind(this);
      this.runMsg = this.runMsg.bind(this);
      this.w = w;
    }

    runName() {
      return this.w;
    }

    twMakeTid(tid, text) {
      var body, e, title;
      console.log("running runMakeTid method");
      try {
        title = tid;
        body = text;
        return $tw.wiki.addTiddler({
          title: title,
          text: body,
          tags: "test"
        });
      } catch (error) {
        e = error;
        console.log(e);
        return "error making tiddler in runMakeTid method";
      }
    }

    async runFetchWpPosts(wpsite) {
      var e, endpoint, i, importer, len, namespace, post, postRoute, posts, site;
      endpoint = "https://" + wpsite + "/wp-json/";
      namespace = 'wp/v2';
      postRoute = '/posts/(?P<id>)';
      site = new WPAPI({
        endpoint: endpoint
      });
      site.post = site.registerRoute(namespace, postRoute);
      try {
        posts = (await site.post().perPage(5).page(1).get());
        // console.log(JSON.stringify(posts))
        importer = (x) => {
          var body, title, wplink, wptext, wptitle;
          wptitle = "import-" + x.id;
          wplink = x.link;
          wptext = JSON.stringify(x);
          title = x.title.rendered;
          body = x.content.rendered;
          return $tw.wiki.addTiddler({
            title: wptitle,
            text: wptext,
            type: "application/json",
            tags: "wpPost",
            wplink: wplink
          });
        };
        for (i = 0, len = posts.length; i < len; i++) {
          post = posts[i];
          await importer(post);
        }
        return "got posts";
      } catch (error) {
        e = error;
        console.log(e);
        return "error fetching wp posts in runFetchWpPosts method";
      }
    }

    runMsg() {
      var msg;
      msg = "hello there";
      return msg;
    }

  };

  module.exports = Wordpress;

}).call(this);
